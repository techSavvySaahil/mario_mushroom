{"version":3,"sources":["logo.svg","components/Box.js","components/Board.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Box","react_default","a","createElement","className","this","props","mushArr","includes","pos","highlight","undefined","Component","Board","state","rows","Array","from","_this","height","keys","columns","width","currentHighlight","direction","intervalId","stepsTaken","changeDirection","newDir","id","clearInterval","setState","newPos","split","row","col","end","concat","setInterval","moveMario","console","log","prevState","parseInt","index","indexOf","splice","length","_handleKeyDown","event","keyCode","arr","i","Math","random","push","generateRandomMush","document","addEventListener","_this2","map","elem","key","components_Box","App","param","prompt","alert","isNaN","askUserInp","components_Board","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d8c103bd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\r\nimport '../styles/box.css'\r\n\r\nclass Box extends Component{\r\n  // function for removing mushroom\r\n  render(){\r\n    return(\r\n      <div className=\"box-wrap\">\r\n      {this.props.mushArr.includes(this.props.pos) && \r\n        <div className={this.props.pos === this.props.highlight ? 'highlight': undefined}>M</div>\r\n      }\r\n      {!this.props.mushArr.includes(this.props.pos) && \r\n        <div className={this.props.pos === this.props.highlight ? 'highlight': undefined}>O</div>\r\n      }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Box;","import React, {Component} from 'react';\r\nimport Box from './Box';\r\n\r\nclass Board extends Component {\r\n  state = {\r\n    rows: Array.from(Array(this.props.height).keys()),\r\n    columns: Array.from(Array(this.props.width).keys()),\r\n    mushArr: [],\r\n    currentHighlight: '0,0',\r\n    direction: 'none',\r\n    intervalId: '',\r\n    stepsTaken: 0\r\n  }\r\n  \r\n  changeDirection = (newDir)=> {\r\n    let id = this.state.intervalId;\r\n    if(id) {\r\n      clearInterval(id);\r\n    }\r\n    this.setState({\r\n      direction: newDir\r\n    });\r\n    let newPos = this.state.currentHighlight;\r\n    let split = newPos.split(',');\r\n    let row = split[0];\r\n    let col = split[1];\r\n    let end = '';\r\n    switch(newDir) {\r\n      case 37: //left\r\n        end = `${row},0`;\r\n        break;\r\n      case 39: //right\r\n        end = `${row},${this.props.width}`;\r\n        break;\r\n      case 38: //up\r\n        end = `0,${col}`;\r\n        break;\r\n      case 40: //down\r\n        end = `${this.props.height},${col}`;\r\n        break;\r\n      default:\r\n        end = `${row},${this.props.width}`;\r\n    }\r\n\r\n    id = setInterval(()=>{\r\n      if(newPos != end){\r\n        newPos = this.moveMario(newPos, newDir);\r\n        console.log(this.state.stepsTaken);\r\n        this.setState((prevState)=>({stepsTaken: prevState.stepsTaken+1}));\r\n      }\r\n      else {\r\n        clearInterval(id);\r\n        newDir = newDir>38 ? newDir-2 : newDir+2;\r\n        this.changeDirection(newDir);\r\n      }\r\n    },1000);\r\n    this.setState({intervalId: id});\r\n\r\n    \r\n  }\r\n  moveMario= (newPos, newDir)=> {\r\n    let split = newPos.split(',');\r\n    let row = parseInt(split[0]);\r\n    let col = parseInt(split[1]);\r\n    switch(newDir) {\r\n      case 37:\r\n        newPos = `${row},${col-1}`;\r\n        break;\r\n      case 39:\r\n        newPos = `${row},${col+1}`;\r\n        break;\r\n      case 38:\r\n        newPos = `${row-1},${col}`;\r\n        break;\r\n      case 40:\r\n        newPos = `${row+1},${col}`;\r\n        break;\r\n      default:\r\n        newPos = newPos;\r\n    }\r\n    this.setState({currentHighlight: newPos});\r\n    let mushArr = this.state.mushArr;\r\n    let index = mushArr.indexOf(newPos);\r\n    if(~index) {\r\n      mushArr.splice(index,1);\r\n      this.setState({mushArr});\r\n      if(!mushArr.length) {\r\n        clearInterval(this.state.intervalId);\r\n      }\r\n    }\r\n    return newPos;\r\n  }\r\n  generateRandomMush() {\r\n    let width = this.props.width;\r\n    let height = this.props.height;\r\n    this.setState({\r\n      rows: Array.from(Array(parseInt(this.props.height)).keys()),\r\n      columns: Array.from(Array(parseInt(this.props.width)).keys())\r\n    });\r\n    let arr = [];\r\n\r\n    for(let i=0; i<height; i++) {\r\n      let row = parseInt(Math.random()*height);\r\n      let col = parseInt(Math.random()*width);\r\n      let pos = `${row},${col}`;\r\n      if(arr.includes(pos)) {\r\n        i--;\r\n      }\r\n      else {\r\n        arr.push(pos);\r\n      }\r\n    }\r\n    this.setState({\r\n      mushArr: arr\r\n    })\r\n  }\r\n\r\n  _handleKeyDown = (event)=> {\r\n    this.changeDirection(event.keyCode);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if(this.props.width && this.props.height) {\r\n      this.generateRandomMush();\r\n    }\r\n    document.addEventListener(\"keydown\", this._handleKeyDown);\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div>\r\n      {this.state.rows && this.state.rows.map((elem,row)=> (\r\n        <div key={row}>\r\n        {this.state.columns && this.state.columns.map((elem,col)=>(\r\n          <Box key={`${row},${col}`} pos={`${row},${col}`}\r\n          mushArr={this.state.mushArr} highlight={this.state.currentHighlight} />\r\n        ))}\r\n        </div>\r\n      ))}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Board;","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport Board from './components/Board';\n\nclass App extends Component {\n  state = {\n    width: 0,\n    height: 0\n  }\n\n  askUserInp(param) {\n    return prompt(`What should be the ${param} of board ?`)\n  }\n  componentDidMount() {\n    alert(`We're building a maze game for you.`);\n    let width = 0;\n    let height = 0;\n\n    while(!width || isNaN(width)){\n      width = this.askUserInp('width');\n    }\n\n    while(!height || isNaN(height)){\n      height = this.askUserInp('height');\n    }\n    \n\n    this.setState({\n      width,\n      height\n    })\n\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n        </header>\n        {this.state.width && this.state.height &&\n          <Board width={this.state.width} height={this.state.height} />\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}